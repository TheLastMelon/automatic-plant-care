{"ast":null,"code":"var _jsxFileName = \"/Users/paulonderisin/SynologyDrive/College/Year 7/SP 2023/ECE 4905/capstone-plantcare/front-end/src/BasicCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from '@mui/material/Card';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea } from '@mui/material';\nimport Popups from './Popup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BasicCard = props => {\n  _s();\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const togglePopup = () => {\n    setIsPopupOpen(!isPopupOpen);\n    console.log(\"Toggling the Popup.\");\n  };\n  const [name, setName] = useState('');\n  const [moistureLvl, setMoistureLvl] = useState('');\n  const [deviceID, setDeviceID] = useState('');\n  const handleSubmit = e => {\n    // IDK\n    e.preventDefault();\n\n    /** Testing to make sure the moisture level only contains numbers */\n    if (/^\\d+$/.test(moistureLvl)) {\n      // Testing our data collection by printing it to the console\n      console.log(`Form Submitted, ${name} with a required Moisture Level of ${moistureLvl}`);\n\n      //Closing the Popup upcon submition\n      togglePopup();\n      props.addCard([moistureLvl, name, deviceID]);\n    } else {\n      // The Moisture Level Contains non-digits.\n      console.log('Please Enter Only Numbers');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      onClick: togglePopup,\n      sx: {\n        minWidth: 150,\n        maxWidth: 150\n      },\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(Popups, {\n      onClick: togglePopup,\n      content: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Plant Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => setName(e.target.value),\n              value: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Device ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => setDeviceID(e.target.value),\n              value: deviceID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Moisture Level:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => setMoistureLvl(e.target.value),\n              value: moistureLvl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit Data!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicCard, \"TIwYGKbVPqfJG0QH/sRLRBWe+OM=\");\n_c = BasicCard;\nexport default BasicCard;\nvar _c;\n$RefreshReg$(_c, \"BasicCard\");","map":{"version":3,"names":["React","useState","Card","Typography","CardActionArea","Popups","BasicCard","props","isPopupOpen","setIsPopupOpen","togglePopup","console","log","name","setName","moistureLvl","setMoistureLvl","deviceID","setDeviceID","handleSubmit","e","preventDefault","test","addCard","minWidth","maxWidth","target","value"],"sources":["/Users/paulonderisin/SynologyDrive/College/Year 7/SP 2023/ECE 4905/capstone-plantcare/front-end/src/BasicCard.js"],"sourcesContent":["import React,{useState} from 'react';\nimport Card from '@mui/material/Card';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea } from '@mui/material';\nimport Popups from './Popup';\n\n\nconst BasicCard = props => {\n\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\n \n    const togglePopup = () => {\n      setIsPopupOpen(!isPopupOpen);\n      console.log(\"Toggling the Popup.\")\n    }\n\n    const [name, setName] = useState('');\n    const [moistureLvl, setMoistureLvl] = useState('');\n    const [deviceID, setDeviceID] = useState('');\n\n    const handleSubmit = (e) => {\n\n      // IDK\n      e.preventDefault();\n\n      /** Testing to make sure the moisture level only contains numbers */\n      if(/^\\d+$/.test(moistureLvl)){\n\n        // Testing our data collection by printing it to the console\n        console.log(`Form Submitted, ${name} with a required Moisture Level of ${moistureLvl}`)\n\n        //Closing the Popup upcon submition\n        togglePopup();\n\n        props.addCard([moistureLvl, name, deviceID]);\n      }else{\n\n        // The Moisture Level Contains non-digits.\n        console.log('Please Enter Only Numbers');\n      }\n    }\n  \n    \n  \n  return (\n    <div >\n        <Card onClick={togglePopup} sx={{ minWidth: 150, maxWidth: 150} }>\n            <CardActionArea>\n                <Typography>{props.name}</Typography>\n            </CardActionArea>\n        </Card>\n        {isPopupOpen && <Popups onClick={togglePopup} content={<>\n          <form onSubmit={handleSubmit}>\n            <label>\n              Plant Name:\n              <input type=\"text\" onChange = {(e) => setName(e.target.value)} value={name}></input>\n            </label>\n            <br></br>\n            <label>\n              Device ID:\n              <input type=\"text\" onChange = {(e) => setDeviceID(e.target.value)} value={deviceID}></input>\n            </label>\n            <br></br>\n            <label>\n              Moisture Level:\n              <input type=\"text\" onChange = {(e) => setMoistureLvl(e.target.value)} value={moistureLvl}></input>\n            </label>\n            <br></br>\n            <button type=\"submit\">Submit Data!</button>\n            \n          </form>\n      </>}\n    />}\n    </div>\n  );\n}\n\nexport default BasicCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}