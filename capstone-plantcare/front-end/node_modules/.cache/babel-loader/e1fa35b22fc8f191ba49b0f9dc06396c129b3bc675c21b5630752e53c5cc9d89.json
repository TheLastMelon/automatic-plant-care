{"ast":null,"code":"var _jsxFileName = \"/Users/paulonderisin/SynologyDrive/College/Year 7/SP 2023/ECE 4905/capstone-plantcare/front-end/src/BasicCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from '@mui/material/Card';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea } from '@mui/material';\nimport Popups from './Popup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BasicCard = props => {\n  _s();\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const togglePopup = () => {\n    setIsPopupOpen(!isPopupOpen);\n    console.log(\"Toggling the Popup.\");\n  };\n  const [name, setName] = useState('');\n  const [deviceID, setDeviceID] = useState('');\n  const [timesPerDay, setTimesPerDay] = useState('');\n  const [timesPerWeek, setTimesPerWeek] = useState('');\n  const [timePerWatering, setTimePerWatering] = useState('');\n  const handleSubmit = async e => {\n    // IDK\n    e.preventDefault();\n    try {\n      let res = await fetch(\"https://h2bro.ddns.net/add_card\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          email: email,\n          mobileNumber: mobileNumber\n        })\n      });\n      let resJson = await res.json();\n      if (res.status === 200) {\n        setDeviceID(\"\");\n        setName(\"\");\n        setTimesPerDay(\"\");\n        setTimesPerWeek(\"\");\n        setTimePerWatering(\"\");\n        setMessage(\"Plant Card Created Successfully\");\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n    togglePopup();\n    //props.addCard([name, deviceID, timesPerDay, timesPerWeek, timePerWatering]);\n\n    /** \n    /** Testing to make sure the moisture level only contains numbers \n    if(/^\\d+$/.test(moistureLvl)){\n       // Testing our data collection by printing it to the console\n      console.log(`Form Submitted, ${name} with a required Moisture Level of ${moistureLvl}`)\n       //Closing the Popup upcon submition\n      togglePopup();\n       props.addCard([moistureLvl, name, deviceID]);\n    }else{\n       // The Moisture Level Contains non-digits.\n      console.log('Please Enter Only Numbers');\n    }\n    */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      onClick: togglePopup,\n      sx: {\n        minWidth: 150,\n        maxWidth: 150\n      },\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(Popups, {\n      onClick: togglePopup,\n      content: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Plant Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => setName(e.target.value),\n              value: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Device ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => setDeviceID(e.target.value),\n              value: deviceID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Water How Many Time Per Day:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"1\",\n              max: \"6\",\n              onChange: e => setTimesPerDay(e.target.value),\n              value: timesPerDay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"How Many Days Per Week:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"1\",\n              max: \"7\",\n              onChange: e => setTimesPerWeek(e.target.value),\n              value: timesPerWeek\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Watering Durination (Seconds):\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"5\",\n              max: \"60\",\n              onChange: e => setTimePerWatering(e.target.value),\n              value: timePerWatering\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit Data!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicCard, \"ysEhJ1SA8fxRzMHY3o9WD2I7UQU=\");\n_c = BasicCard;\nexport default BasicCard;\nvar _c;\n$RefreshReg$(_c, \"BasicCard\");","map":{"version":3,"names":["React","useState","Card","Typography","CardActionArea","Popups","BasicCard","props","isPopupOpen","setIsPopupOpen","togglePopup","console","log","name","setName","deviceID","setDeviceID","timesPerDay","setTimesPerDay","timesPerWeek","setTimesPerWeek","timePerWatering","setTimePerWatering","handleSubmit","e","preventDefault","res","fetch","method","body","JSON","stringify","email","mobileNumber","resJson","json","status","setMessage","err","minWidth","maxWidth","target","value"],"sources":["/Users/paulonderisin/SynologyDrive/College/Year 7/SP 2023/ECE 4905/capstone-plantcare/front-end/src/BasicCard.js"],"sourcesContent":["import React,{useState} from 'react';\nimport Card from '@mui/material/Card';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea } from '@mui/material';\nimport Popups from './Popup';\n\n\nconst BasicCard = props => {\n\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\n \n    const togglePopup = () => {\n      setIsPopupOpen(!isPopupOpen);\n      console.log(\"Toggling the Popup.\")\n    }\n\n    const [name, setName] = useState('');\n    const [deviceID, setDeviceID] = useState('');\n    const [timesPerDay, setTimesPerDay] = useState('');\n    const [timesPerWeek, setTimesPerWeek] = useState('');\n    const [timePerWatering, setTimePerWatering] = useState('');\n\n    const handleSubmit = async (e) => {\n\n      // IDK\n      e.preventDefault();\n\n      try {\n        let res = await fetch(\"https://h2bro.ddns.net/add_card\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            name: name,\n            email: email,\n            mobileNumber: mobileNumber,\n          }),\n        });\n        let resJson = await res.json();\n\n        if (res.status === 200) {\n          setDeviceID(\"\");\n          setName(\"\");\n          setTimesPerDay(\"\");\n          setTimesPerWeek(\"\");\n          setTimePerWatering(\"\");\n          setMessage(\"Plant Card Created Successfully\");\n        } else {\n          setMessage(\"Some error occured\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n\n      togglePopup();\n      //props.addCard([name, deviceID, timesPerDay, timesPerWeek, timePerWatering]);\n\n\n\n      /** \n      /** Testing to make sure the moisture level only contains numbers \n      if(/^\\d+$/.test(moistureLvl)){\n\n        // Testing our data collection by printing it to the console\n        console.log(`Form Submitted, ${name} with a required Moisture Level of ${moistureLvl}`)\n\n        //Closing the Popup upcon submition\n        togglePopup();\n\n        props.addCard([moistureLvl, name, deviceID]);\n      }else{\n\n        // The Moisture Level Contains non-digits.\n        console.log('Please Enter Only Numbers');\n      }\n      */\n    }\n  \n    \n  \n  return (\n    <div >\n        <Card onClick={togglePopup} sx={{ minWidth: 150, maxWidth: 150} }>\n            <CardActionArea>\n                <Typography>{props.name}</Typography>\n            </CardActionArea>\n        </Card>\n        {isPopupOpen && <Popups onClick={togglePopup} content={<>\n          <form onSubmit={handleSubmit}>\n            <label>\n              Plant Name:\n              <input type=\"text\" onChange = {(e) => setName(e.target.value)} value={name}></input>\n            </label>\n            <br></br>\n            <label>\n              Device ID:\n              <input type=\"text\" onChange = {(e) => setDeviceID(e.target.value)} value={deviceID}></input>\n            </label>\n            <br></br>\n            <label>\n              Water How Many Time Per Day:\n              <input type=\"number\" min=\"1\" max=\"6\" onChange = {(e) => setTimesPerDay(e.target.value)} value={timesPerDay}></input>\n            </label>\n            <br></br>\n            <label>\n              How Many Days Per Week:\n              <input type=\"number\" min=\"1\" max=\"7\" onChange = {(e) => setTimesPerWeek(e.target.value)} value={timesPerWeek}></input>\n            </label>\n            <br></br>\n            <label>\n              Watering Durination (Seconds):\n              <input type=\"number\" min=\"5\" max=\"60\" onChange = {(e) => setTimePerWatering(e.target.value)} value={timePerWatering}></input>\n            </label>\n            <br></br>\n            <button type=\"submit\">Submit Data!</button>\n            \n          </form>\n      </>}\n    />}\n    </div>\n  );\n}\n\nexport default BasicCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}